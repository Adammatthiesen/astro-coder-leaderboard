---
import { Avatar, Card } from 'astrolace:components';
import type { ReturnCodeStatsUserList } from '../types';
import { getLevel } from '../utils';

interface Props {
    fetchUserStats: ReturnCodeStatsUserList[];
}

const { fetchUserStats } = Astro.props;
---
{
    fetchUserStats.map((
        { displayName, gravaterURL, totalXP, topMachine, topLanguages }, index
    ) => (
        <Card class="sl-card">
            <div class="card-content">

                <Avatar image={ gravaterURL || "" } label={displayName + "'s Gravatar Image"} />

                <div class="name">
                    { displayName }
                </div>

                <div class="language-group">
                    { // @ts-expect-error: topLanguages is an `Object` Type
                        topLanguages.first && (
                        <div class="languages">
                            { // @ts-expect-error: topLanguages is an `Object` Type 
                                topLanguages.first 
                            }
                        </div>
                    )}
                    { // @ts-expect-error: topLanguages is an `Object` Type
                        topLanguages.second && (
                        <div class="languages">
                            { // @ts-expect-error: topLanguages is an `Object` Type
                                topLanguages.second 
                            }
                        </div>
                    )}
                    { // @ts-expect-error: topLanguages is an `Object` Type
                        topLanguages.third && (
                        <div class="languages">
                            { // @ts-expect-error: topLanguages is an `Object` Type
                                topLanguages.third 
                            }
                        </div>
                    )}
                </div>

                <div class="machine">
                    { topMachine }
                </div>

                <div class="level">
                    Level { getLevel(totalXP) }
                </div>

                <div class="rank">
                    <div class="ranklabel">
                        Rank:
                    </div>
                    # { index + 1 }
                </div>

            </div>
        </Card>
    ))
}
